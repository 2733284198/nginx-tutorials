= Nginx 配置指令的执行顺序（九） =

紧接在 C<server-rewrite> 阶段后边的是 C<find-config>
阶段。这个阶段并不支持 Nginx 模块注册处理程序，而是由 Nginx
核心来完成 C<location> 配置块与请求 URI 之间的配对工作。换句话
说，在此阶段之前，请求并没有与任何 C<location> 配置块建立关联。因此
，对于运行在 C<find-config> 阶段之前的 C<post-read>
和 C<server-rewrite> 阶段来说，只有 C<server> 配置
块以及更外层作用域的配置指令才会起作用。这就是为什么只有写在 C<server>
配置块中的 L<ngx_rewrite> 模块的指令才会运行在 C<server-rewrite>
阶段，这也是为什么前面所有例子中的 L<ngx_realip> 模块的指令也都特
意写在了 C<server> 配置块中以确实其注册在 C<post-read>
阶段的处理程序起作用。

运行在 C<find-config> 阶段之后的便是我们的老朋友，C<rewrite>
阶段了。由于 Nginx 已经在 C<find-config> 阶段完成了当前请
求与 C<location> 配置块之间的配对，所以从 C<rewrite> 阶
段开始，C<location> 配置块中的指令便可以产生作用。前面我们已经知道
L<ngx_rewrite> 模块的指令用于 C<location> 块中时便是
运行在这个 C<rewrite> 阶段。另外，L<ngx_set_misc> 模
块的指令也是如此，还有 L<ngx_lua> 模块的 L<ngx_lua/set_by_lua>
指令和 L<ngx_lua/rewrite_by_lua> 指令也不例外。

C<rewrite> 阶段再往后便是所谓的 C<post-rewrite> 阶段
。这个阶段也像 C<find-config> 阶段那样不接受 Nginx 模块注
册处理程序，而是由 Nginx 核心完成 C<rewrite> 阶段所要求的“内
部跳转”操作（如果 C<rewrite> 阶段运行的配置指令有此要求的话）。先前在 L<vartut/（二）> 中已经介绍过了“内部跳转”的概念，同时演示了如何通过 L<ngx_echo/echo_exec> 指令或者 L<ngx_rewrite/rewrite> 指令来发起“内部跳转”。由于 L<ngx_echo/echo_exec> 指令运行在 C<content> 阶段，与我们这里讨论的 C<post-rewrite> 阶段并无关系，这里我们感兴趣的是运行在 C<rewrite> 阶段的 L<ngx_rewrite/rewrite> 指令。回忆 L<vartut/（二）> 中演示过的这个例子：

    :nginx
    server {
        listen 8080;

        location /foo {
            set $a hello;
            rewrite ^ /bar;
        }

        location /bar {
            echo "a = [$a]";
        }
    }

这里在 C<location /foo> 中通过 L<ngx_rewrite/rewrite> 指令把当前请求的 URI 无条件地改写为 C</bar>，同时发起一个“内部跳转”，跳进了 C<location /bar> 中。

    :nginx
    location = /foo {
    }

